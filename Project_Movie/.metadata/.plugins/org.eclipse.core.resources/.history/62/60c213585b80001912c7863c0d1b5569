import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

import org.apache.commons.lang.StringUtils;

public class Snack_Shop {
	Movie_View m_view;
	BufferedReader br;
	PrintWriter pw;
	String str = "";
	int cnt;
	private ClientInfoClass clientinfo;
	private ConnectionPool cp = null;
	private Connection con = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	private ResultSetMetaData rsmd = null;
	MovieThread moviethread;

	Snack_Shop(BufferedReader br, PrintWriter pw, Connection con, ConnectionPool cp,
			MovieThread moviethread,ClientInfoClass clientinfo){
		m_view = new Movie_View();
		this.br = br;
		this.con = con;
		this.pw = pw;
		this.cp = cp;
		this.clientinfo =clientinfo;
		this.moviethread =moviethread;
	}
	boolean selectsnack(String select) {
		while(true) {
			if(moviethread.isInteger(select)){
				return true;
			}
			else if(select.equals("n") || select.equals("N")) {
				this.cnt++;
				return false;
			}
			else {
				moviethread.sendMsg("잘못 입력하셨습니다. 다시 입력해주시기 바랍니다.");
			}
		}
	}
	// 매점 이용 메소드 
	//////////         슬                 아             담            당            ////////////////////////싫어싫어싫어시러시러시러싫다구!!!!!!!!!
	void menuShow(String menu) {
		int indexNum = 0;
		String foodquery="";

		if(menu.equals("popcorn")) {foodquery = "SP%";}
		else if(menu.equals("drink")) {foodquery = "SD%";}
		else if(menu.equals("icecream")) {foodquery = "SI%";}
		else if(menu.equals("snack")) { foodquery ="SN%";}

		String query = "SELECT snack_code, snack_name, snack_price FROM snack_menu WHERE snack_code LIKE '"+foodquery+"' ";
		rs = moviethread.returnRS(query);
		try {
			while (rs.next()) {
				indexNum++;
				String num = String.format("%02d", indexNum);
				String sendStr = String.format("%s\t%-50s\t가격:  %-10s", num, rs.getString(2), rs.getString(3));
				moviethread.sendMsg(sendStr);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	void snack_shopping() {
		boolean loop = true;
		this.cnt = 0;
		String select = "";
		boolean isSelect = true;
		while (loop) {
			String cntSelect = "";
			String query = "";
			int count = 1;
			if(cnt == 0) {
				// 팝콘 메뉴 보여주기
				menuShow("popcorn");
				query = "SELECT snack_code, snack_name, snack_price FROM snack_menu WHERE snack_code LIKE 'SP%' ";
				moviethread.sendMsg("\n팝콘을 선택해주세요. 선택하지 않으시려면 n을 입력하세요.");
				select = moviethread.recive();
				isSelect = selectsnack(select);
			}
			else if(cnt == 1) {
				// 음료 메뉴 보여주기
				menuShow("drink");
				query = "SELECT snack_code, snack_name, snack_price FROM snack_menu WHERE snack_code LIKE 'SD%' ";
				moviethread.sendMsg("\n음료를 선택해주세요. 선택하지 않으시려면 n을 입력하세요.");
				select = moviethread.recive();
				isSelect = selectsnack(select);
			}
			else if(cnt == 2) {
				// 아이스크림 메뉴 보여주기
				menuShow("icecream");
				query = "SELECT snack_code, snack_name, snack_price FROM snack_menu WHERE snack_code LIKE 'SI%' ";
				moviethread.sendMsg("\n아이스크림을 선택해주세요. 선택하지 않으시려면 n을 입력하세요.");
				select = moviethread.recive();
				isSelect = selectsnack(select);
			}
			else if(cnt == 3) {
				// 나머지 스낵 메뉴 보여주기
				menuShow("snack");
				query = "SELECT snack_code, snack_name, snack_price FROM snack_menu WHERE snack_code LIKE 'SN%' ";
				moviethread.sendMsg("\n스낵을 선택해주세요. 선택하지 않으시려면 n을 입력하세요.");
				select = moviethread.recive();
				isSelect = selectsnack(select);
				loop = false;
			}

			if(isSelect) {
				if (moviethread.isInteger(select)) {
					int num = Integer.parseInt(select);
					rs = moviethread.returnRS(query);
					moviethread.saveKeyValue(rs, num);
					moviethread.sendMsg("수량을 선택해주세요.");
					cntSelect = moviethread.recive();
					if(moviethread.isInteger(cntSelect)) {
						count = Integer.parseInt(cntSelect);						
						clientinfo.getSnack_shopping().get(clientinfo.getSnack_shopping().size()-1).setSnack_count(count);
					}
				}
				cnt++;
				isSelect = false;
			}
		}
		moviethread.sendMsg("----------------------------------------------------------");
		moviethread.sendMsg("** 최종 선택하신 스낵 종류입니다 **");
		moviethread.sendMsg("----------------------------------------------------------");
		moviethread.sendMsg(String.format("\t%-50s\t%-5s\t%-10s", "상품명", "수량", "가격"));
		moviethread.sendMsg("----------------------------------------------------------");
		finalSelect();
		moviethread.sendMsg("----------------------------------------------------------");
		moviethread.sendMsg("---------------------------------------------------------\n");
		moviethread.sendMsg("위의 내용이 맞으면 y 다시 고르시려면  n을 입력하세요.");
		try {
			select = br.readLine();
			if(select.equals("y") || select.equals("Y")) {
				bill();
			}
			else if(select.equals("n") || select.equals("N")) {
				snack_shopping();
			}
			else {
				moviethread.sendMsg("잘못 입력하셨습니다. 다시 입력해주세요.");
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		bill();
	}
	void finalSelect() {
		int totalPrice = 0;
		//		moviethread.sendMsg("사이즈" + clientinfo.getSnack_shopping().size());
		for (int i = 0; i < clientinfo.getSnack_shopping().size(); i++) {
			if (clientinfo.getSnack_shopping().size() > 0) {
				String foodcode = clientinfo.getSnack_shopping().get(i).getSnack_code();
				String foodname = clientinfo.getSnack_shopping().get(i).getSnack_name();
				int foodprice = clientinfo.getSnack_shopping().get(i).getSnack_price();
				int foodcount = clientinfo.getSnack_shopping().get(i).getSnack_count();
				if(foodcode.substring(0, 2).equals("SP")) {
					moviethread.sendMsg(String.format("| - "+"%-50s\t%-5s\t%-10s", foodname, foodcount, foodprice) + "|");
					totalPrice += foodprice*foodcount;
				}
				if(foodcode.substring(0, 2).equals("SD")) {
					moviethread.sendMsg(String.format("| - "+"%-50s\t%-5s\t%-10s", foodname, foodcount, foodprice) + "|");
					totalPrice += foodprice*foodcount;
				}
				if(foodcode.substring(0, 2).equals("SI")) {
					moviethread.sendMsg(String.format("| - "+"%-50s\t%-5s\t%-10s", foodname, foodcount, foodprice) + "|");
					totalPrice += foodprice*foodcount;
				}
				if(foodcode.substring(0, 2).equals("SN")) {
					moviethread.sendMsg(String.format("| - "+"%-50s\t%-5s\t%-10s", foodname, foodcount, foodprice) + "|");
					totalPrice += foodprice*foodcount;
				}
			}
		}
		clientinfo.setSnackPrice(totalPrice);
	}
	// 장바구니에 담은걸 계산 하는 메소드
	// 장바구니에 담겨 있는 
	void bill() {
		moviethread.sendMsg("----------------------------------------------------------------");
		moviethread.sendMsg("\t\t| ** BOOLSA SNACK ** ");
		moviethread.sendMsg("----------------------------------------------------------------");
		moviethread.sendMsg("----------------------------------------------------------------");
		moviethread.sendMsg(String.format("\t%-50s\t%-5s\t%-10s\t%-10s", "상품명", "수량", "단가", "금액"));
		for (int i = 0; i < clientinfo.getSnack_shopping().size(); i++) {
			if (clientinfo.getSnack_shopping().size() > 0) {
				String foodcode = clientinfo.getSnack_shopping().get(i).getSnack_code();
				String foodname = clientinfo.getSnack_shopping().get(i).getSnack_name();
				int foodprice = clientinfo.getSnack_shopping().get(i).getSnack_price();
				int foodcount = clientinfo.getSnack_shopping().get(i).getSnack_count();

				if(foodcode.substring(0, 2).equals("SP")) {
					moviethread.sendMsg(String.format("|" + "%-50s\t%-5s\t%-10s\t%-10s", foodname, foodcount, foodprice, foodcount*foodprice) + "|");
				}
				if(foodcode.substring(0, 2).equals("SD")) {
					moviethread.sendMsg(String.format("|" + "%-50s\t%-5s\t%-10s\t%-10s", foodname, foodcount, foodprice, foodcount*foodprice) + "|");
				}
				if(foodcode.substring(0, 2).equals("SI")) {
					moviethread.sendMsg(String.format("|" + "%-50s\t%-5s\t%-10s\t%-10s", foodname, foodcount, foodprice, foodcount*foodprice) + "|");
				}
				if(foodcode.substring(0, 2).equals("SN")) {
					moviethread.sendMsg(String.format("|" + "%-50s\t%-5s\t%-10s\t%-10s", foodname, foodcount, foodprice, foodcount*foodprice) + "|");
				}
			}
		}
		moviethread.sendMsg("------------------------------------------------------");
		moviethread.sendMsg("결제할 총 금액 : " + clientinfo.getSnackPrice());
		moviethread.sendMsg("------------------------------------------------------");
		moviethread.sendMsg("결제하시려면 y 취소하시려면 n을 입력하세요.");
		String select = moviethread.recive();
		if(select.equals("y") || select.equals("Y")) {
			moviethread.sendMsg("결제가 완료되었습니다. 감사합니다.");
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		else if(select.equals("n") || select.equals("N")) {
			moviethread.sendMsg(clientinfo.resetSnack());
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		else {
			moviethread.sendMsg("잘못 입력하셨습니다.");
		}
	}
}
